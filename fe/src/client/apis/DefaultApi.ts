/* tslint:disable */
/* eslint-disable */
/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  HTTPValidationError,
  ImageResult,
} from '../models';
import {
    HTTPValidationErrorFromJSON,
    HTTPValidationErrorToJSON,
    ImageResultFromJSON,
    ImageResultToJSON,
} from '../models';

export interface AndroidClickApiAndroidClickPostRequest {
    x: number;
    y: number;
}

export interface AndroidRunScriptApiAndroidScriptsScriptPostRequest {
    script: string;
}

export interface AndroidSaveCropImageApiAndroidImageCropSavePutRequest {
    uuid: string;
    x: number;
    y: number;
    width: number;
    height: number;
    name: string;
}

/**
 * 
 */
export class DefaultApi extends runtime.BaseAPI {

    /**
     * Android Click
     */
    async androidClickApiAndroidClickPostRaw(requestParameters: AndroidClickApiAndroidClickPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<any>> {
        if (requestParameters.x === null || requestParameters.x === undefined) {
            throw new runtime.RequiredError('x','Required parameter requestParameters.x was null or undefined when calling androidClickApiAndroidClickPost.');
        }

        if (requestParameters.y === null || requestParameters.y === undefined) {
            throw new runtime.RequiredError('y','Required parameter requestParameters.y was null or undefined when calling androidClickApiAndroidClickPost.');
        }

        const queryParameters: any = {};

        if (requestParameters.x !== undefined) {
            queryParameters['x'] = requestParameters.x;
        }

        if (requestParameters.y !== undefined) {
            queryParameters['y'] = requestParameters.y;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/android/click`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.TextApiResponse(response) as any;
    }

    /**
     * Android Click
     */
    async androidClickApiAndroidClickPost(requestParameters: AndroidClickApiAndroidClickPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<any> {
        const response = await this.androidClickApiAndroidClickPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Android Image
     */
    async androidImageApiAndroidImageGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ImageResult>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/android/image`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ImageResultFromJSON(jsonValue));
    }

    /**
     * Android Image
     */
    async androidImageApiAndroidImageGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ImageResult> {
        const response = await this.androidImageApiAndroidImageGetRaw(initOverrides);
        return await response.value();
    }

    /**
     * Android Run Script
     */
    async androidRunScriptApiAndroidScriptsScriptPostRaw(requestParameters: AndroidRunScriptApiAndroidScriptsScriptPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<any>> {
        if (requestParameters.script === null || requestParameters.script === undefined) {
            throw new runtime.RequiredError('script','Required parameter requestParameters.script was null or undefined when calling androidRunScriptApiAndroidScriptsScriptPost.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/android/scripts/{script}`.replace(`{${"script"}}`, encodeURIComponent(String(requestParameters.script))),
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.TextApiResponse(response) as any;
    }

    /**
     * Android Run Script
     */
    async androidRunScriptApiAndroidScriptsScriptPost(requestParameters: AndroidRunScriptApiAndroidScriptsScriptPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<any> {
        const response = await this.androidRunScriptApiAndroidScriptsScriptPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Android Save Crop Image
     */
    async androidSaveCropImageApiAndroidImageCropSavePutRaw(requestParameters: AndroidSaveCropImageApiAndroidImageCropSavePutRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<any>> {
        if (requestParameters.uuid === null || requestParameters.uuid === undefined) {
            throw new runtime.RequiredError('uuid','Required parameter requestParameters.uuid was null or undefined when calling androidSaveCropImageApiAndroidImageCropSavePut.');
        }

        if (requestParameters.x === null || requestParameters.x === undefined) {
            throw new runtime.RequiredError('x','Required parameter requestParameters.x was null or undefined when calling androidSaveCropImageApiAndroidImageCropSavePut.');
        }

        if (requestParameters.y === null || requestParameters.y === undefined) {
            throw new runtime.RequiredError('y','Required parameter requestParameters.y was null or undefined when calling androidSaveCropImageApiAndroidImageCropSavePut.');
        }

        if (requestParameters.width === null || requestParameters.width === undefined) {
            throw new runtime.RequiredError('width','Required parameter requestParameters.width was null or undefined when calling androidSaveCropImageApiAndroidImageCropSavePut.');
        }

        if (requestParameters.height === null || requestParameters.height === undefined) {
            throw new runtime.RequiredError('height','Required parameter requestParameters.height was null or undefined when calling androidSaveCropImageApiAndroidImageCropSavePut.');
        }

        if (requestParameters.name === null || requestParameters.name === undefined) {
            throw new runtime.RequiredError('name','Required parameter requestParameters.name was null or undefined when calling androidSaveCropImageApiAndroidImageCropSavePut.');
        }

        const queryParameters: any = {};

        if (requestParameters.uuid !== undefined) {
            queryParameters['uuid'] = requestParameters.uuid;
        }

        if (requestParameters.x !== undefined) {
            queryParameters['x'] = requestParameters.x;
        }

        if (requestParameters.y !== undefined) {
            queryParameters['y'] = requestParameters.y;
        }

        if (requestParameters.width !== undefined) {
            queryParameters['width'] = requestParameters.width;
        }

        if (requestParameters.height !== undefined) {
            queryParameters['height'] = requestParameters.height;
        }

        if (requestParameters.name !== undefined) {
            queryParameters['name'] = requestParameters.name;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/android/image/crop/save`,
            method: 'PUT',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.TextApiResponse(response) as any;
    }

    /**
     * Android Save Crop Image
     */
    async androidSaveCropImageApiAndroidImageCropSavePut(requestParameters: AndroidSaveCropImageApiAndroidImageCropSavePutRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<any> {
        const response = await this.androidSaveCropImageApiAndroidImageCropSavePutRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Android Scripts
     */
    async androidScriptsApiAndroidScriptsGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<string>>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/android/scripts`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse<any>(response);
    }

    /**
     * Android Scripts
     */
    async androidScriptsApiAndroidScriptsGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<string>> {
        const response = await this.androidScriptsApiAndroidScriptsGetRaw(initOverrides);
        return await response.value();
    }

    /**
     * Android Video Feed
     */
    async androidVideoFeedApiAndroidVideoGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<any>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/android/video`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.TextApiResponse(response) as any;
    }

    /**
     * Android Video Feed
     */
    async androidVideoFeedApiAndroidVideoGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<any> {
        const response = await this.androidVideoFeedApiAndroidVideoGetRaw(initOverrides);
        return await response.value();
    }

    /**
     * Video Feed
     */
    async videoFeedApiGameVideoGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<any>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/game/video`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.TextApiResponse(response) as any;
    }

    /**
     * Video Feed
     */
    async videoFeedApiGameVideoGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<any> {
        const response = await this.videoFeedApiGameVideoGetRaw(initOverrides);
        return await response.value();
    }

}
